<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/cachehit/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/cachehit/" rel="alternate" type="text/html" /><updated>2020-11-23T00:52:20+01:00</updated><id>http://localhost:4000/cachehit/feed.xml</id><title type="html">Cache HIT</title><subtitle>Hey! In this blog I will share my journey into software engineering while working with C++ and things I learn in the meantime like computer architecture and optimization techniques.</subtitle><author><name>Mohammed Amine MAGHOUS</name></author><entry><title type="html">Cross platform code and macros</title><link href="http://localhost:4000/cachehit/computer-science/2020/11/16/Cross-platform-code-and-macros.html" rel="alternate" type="text/html" title="Cross platform code and macros" /><published>2020-11-16T16:10:28+01:00</published><updated>2020-11-16T16:10:28+01:00</updated><id>http://localhost:4000/cachehit/computer-science/2020/11/16/Cross-platform-code-and-macros</id><content type="html" xml:base="http://localhost:4000/cachehit/computer-science/2020/11/16/Cross-platform-code-and-macros.html">&lt;p&gt;We usually hear the word &lt;em&gt;Cross platform&lt;/em&gt; which means that the code can be compiled and executed in multiple platforms, this can be acheived by using a cross platform langauge like Java.&lt;/p&gt;

&lt;p&gt;Cross platform code does not come from the air, but it is a layer of abstraction that some geeks added by duplicating the code for each platform and putting them in some libraries we use nowadays.&lt;/p&gt;

&lt;p&gt;To write a cross platform library from scratch in C or C++, that works both in windows and linux we will need to write something like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ifdef _WIN32
// do Windows-specific stuff
#elif __linux__
// do Linux-specific stuff
#endif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;But the problem is where are those macros defined ?
The answer in short is in the compiler, MinGW compiler will define _WIN32 while a gcc compiler will define &lt;strong&gt;linux&lt;/strong&gt;. Thus each compiler will compile only the code specific to itâ€™s platform.&lt;/p&gt;

&lt;p&gt;Hope you learned something new!&lt;/p&gt;</content><author><name>Mohammed Amine MAGHOUS</name></author><category term="Computer-science" /><summary type="html">We usually hear the word Cross platform which means that the code can be compiled and executed in multiple platforms, this can be acheived by using a cross platform langauge like Java.</summary></entry></feed>